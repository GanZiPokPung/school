Bresenhem Line Algorithm

컴퓨터 화면 상에 직선(선분)을 그리는 알고리즘
덧셈과 뺄셈만을 이용함으로써, 고속으로 직선을 그림

무식한 방법
*선분 상의 점들의 리스트를 작성
장점 : 계산하지 않고 바로 적용되기 때문에 연산이 
     빠름
단점 : 무식하기 때문에 사용자가 만들기가 힘듬

선분상에 점 찍기

*직선의 방정식을 구한다.
y = ax + b
a = (y2-y1)/(x2-x1)
b = y1 - x1 * a

*x를 x1부터 x2까지 (일정간격)변화시켜가면서, y값을 계산한다.

a = (y2 - y1)/(x2 - x1)
b = y1 - x1 * a

for x in range(x1, x2 + 1, 10):
	y = a * x + b

*직선의 방정식에 문제점?
->y축과 평행인 직선(x = c)을 그릴 수 없음
	분모가 0이 됨

*해결책은? 

Parametric Representation of Lines

vector크기 = 
sqrt(x축거리^2 + y축거리^2)
vector방향 = 
(x축거리 / 크기, y축거리 / 크기)

p3 벡터 위 30% 지점의 점을 m이라고 하면, 벡터 m?
m = p1 + 0.3p3 = p1 + 0.3(p2 - p1) = 
0.7p1 + 0.3p2

m(t) = p1 + tp3 = p1 + t(p2 - p1) = 
p1(t - 1) + tp2

m(t)는 결국, p1과 p2를 1-t : t 비율로 섞을 것
m(t)는 두 점 p1과 p2의 선형 조합임

0 <= t <= 1

*직선, 또는 곡선의 (x,y) 좌표를 공통적인 파라미터를 이용하여 표현하는 방법.
*일반적인 수학적 표현에 비해 컴퓨터를 이용하여 그리기가 편리함
*동일한 곡선에 대해, 파라미터 표현법은 여러 개 있음

python List Comprehension

*리스트를 빠르게 만들기 위한 독특한 문법 구조
*리스트 안에 있는 데이타들을 일정한 규칙을 가지고 생성

numbers = [n for n in range(1, 10)

even_numbers = [n for n in range(1, 10 + 1) if n%2 == 0)

random_numbers = [random.randint(1, 100) for n in range(10)]

#곡선 이동
m(t) = (1 - t)m(t1) + tm(t2)
 = (1-t)((1-t1)p1 + t1p2) + t((1-t2)p2 + t2p3)

Cardinal Spline

점의 순서에 따라 나오는게 달라짐
왜? 직선도 달라지기 때문에

네 점은??
곡선 p(t1)과 (pt2)를 1-t:t의 비율로 섞음

객체란? 속성이나 행위를 가지게 모델링 한것

추상화 : 객체가 가지는 가장 중요한 부분들만 뽑아냄.
	꼭 필요로 하는것! (간략화, 요약)

속성? 객체의 상태 / 상태를 나타내는 값

행위? 객체의 상태를 바꾸어 주는 것
	객체는 왜 움직이는가?
	1. 물리, 2. 사용자입력, 3. AI

게임 객체
->게임 월드를 구성하는 모든 요소들을 지칭


클래스란
유사한 여러 객체들에게 공통적으로 필요로 하는 데이터와 이 데이터 위에서 수행되는 함수들을 정의하는 소프트웨어 단위


게임 기본 구조
Initialization >> Game Logic(객체들의 상호작용을 시뮬레이션) >> Drawing(그 결과를 보여줌)
>> Exit >> Finish

*Python Module 
-파이썬의 정의와 문장을 담고 있는 파일
-그 자체로도 실행 가능하며, 다른 모듈에서 임포트 해서 사용할 수도 있음. 임포트 되면, 그 자체가 하나의 객체가 됨. (싱글톤 객체가 됨)

__name__속성

-일반적으로 그 값은 모듈의 이름임
-하지만, module을 임포트하지 않고, 직접 실행하는 경우, "__main__"이라는 문자열 값을 갖게 되어, 현재 모듈이 단독적으로 실행되는 상황을 구분함.

__name__속성의 활용
-어떤 모듈이 임포트되는 경우와 직접 실행이 되는 경우를 구분할 수 있음.
-따라서 직접 실행되는 상황에서만 필요한 일들을 구분해서 처리할 수 있음.
-메인 함수를 흉내내는 경우에 많이 활용됨.

리팩토링
'결과의 변경 없이 코드의 구조를 재조정함'을 뜻한다. 주로 가독성을 높이고 유지보수를 편하게 한다. 

게임 상태란?
게임 프로그램 실행 중의 어떤 특정 위치(또는 모드, 씬)
사용자 입력(키보드 또는 마우스 입력)에 대한 대응 방식은 게임의 상태에 따라 달라짐