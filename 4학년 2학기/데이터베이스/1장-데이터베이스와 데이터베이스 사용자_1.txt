# A simplified database system environment

데이터베이스 + 데이터베이스관리시스템 = 데이터베이스 시스템

1.Users/Programmers

2.DataBase System

-Application Programs/Queries

3.DBMS(DataBase Manage System) Software

-Software to Process
 Queries(자연어, 프로그래밍 언어)/Programs
==> 해석(decode) 단계

-Software to Access 
 Stored Data
==> 실제 데이터 접근 단계

4. Data

Stored Database Definition(Meta-Data)
Meta-Data => 데이터를 설명하는 데이터

# 데이터베이스 사용사례

인터넷을 사용하는 거의 모든 행위들..

# 데이터베이스 시스템의 구성 요소

시스템 카탈로그?

# 화일과 화일시스템

운영체제 내에 데이터를 관리할 수 있는 도구가 있었다.
(ex. fscanf, fprintf 등등)
그것이 화일 시스템이다.

화일이란?
1. 물리적인 비트의 연속
2. 순차적인 레코드들로 구성
3. 레코드는 연관된 여러 필드들의 모임

화일시스템

화일을 관리하는 방법.

# 화일 시스템의 특정

-데이터에 대한 프로그램의 의존도가 높다.(중요)
A에 대한 B의 의존도가 높다. => A > B
(프로그램이 데이터에 많이 의존한다.)

화일 데이터가 바뀌면 프로그램은 그것을 무조건 따라야 한다.
예를들면 화일 데이터에 한가지 필드가 추가되면 프로그램 코드를 또 바꿔주어야 한다.

데이터베이스는 이런 점들을 조금이나마 보완 해줄 수 있다.


*그밖의 문제점들

데이터의 중복성
각종 기능 부족 - 기타 등등

# 데이터의 중복성(중요)

중복해서 따로 저장 => 한쪽은 수정되고 한쪽은 그렇지 못할 수 있음
(이것을 데이터의 불일치라고 한다.)
또한 하드디스크를 많이 잡아먹는다.

데이터베이스에서는 이러한 중복성을 철저하게 배제하려고 한다.

# 부족한 기능들(달리 말하면 DB에는 있는 기능)
1. 데이터 모델링(데이터 구조의 틀을 잡는것) 개념이 없다.
2. 질의어(Query)(사용자가 쓰기에 편한 언어(자연어))가 없다.
3. 동시성제어(일종의 신호등개념(충돌현상을 막아줌))가 없다.
4. 파손, 회복 기능
5. 보안

# 컴퓨터 시스템에서 DBMS의 위치
DBMS가 꼭 운영체제를 거쳐서 하드웨어에 접근하지는 않는다.
경우에 따라서는 최적의 효과를 내기 위해서 하드웨어에 직접 접근할 수 있다.