#프로세스와 쓰레드

쓰레드 -> 프로세스의 부분집합

Create Thread (9) -> Thread Count 10

쓰레드는 운영체제가 만드는 것이 아니다.
운영체제는 쓰레드가 몇 개 생기는지 모름.

부모 쓰레드 -생성-> 자식 쓰레드
자식 쓰레드는 부모 쓰레드의 CODE, DATA, HEAP을 공유한다.(복사X)

-->쓰레드 같은 집안에 같이 산다.. 라는 느낌?

-(옆 쓰레드의 stack은 접근 불가?)-->접근 불가. 독립, 볼수도 없음
모든 영역을 공유하면 다 똑같기 때문에 의미가 없다..

억지로 공유영역을 독립으로 혹은 정반대로 할수는 있는데 형식상 안하는게 좋다.

*멀티 쓰레드의 메모리 공유

*프로세스의 대한 쓰레드의 장점
-오버헤드 적음
-Context Switch Overhead
프로세스 - 프로세스  <  쓰레드 - 쓰레드(복사하지않음)
TLB(Virual memory(TLB 교체 오버헤드))
-**쓰레드간의 통신이 가능하다.

*쓰레드의 단점
-하나의 쓰레드에서 발생한 문제가 전체 프로세스를 멈추게 한다.
efr
-디버깅이 어렵다.

#두번째 시간

*멀티 쓰레드의 사용목적
-멀티 코어 CPU에서의 프로그램 성능향상
-프로그램을 모듈화 해서 알아보기 쉽게 -> 겉멋
없는것 보다 있는게 더 안 좋음

2배~배 ~~ 6배

병렬 컴퓨터에서... 


#멀티코어

요즘은 정말 찾아보기 힘듬


* Inter과 ADM에서 멀티코어 프로세서를 만드는 이유?
-CPU의 성능 업
-클록속도 (발열문제)
-

*멀티코어프로세서(Dual Core - 2 CPU)
*Qead*Core - 1CPU

*코어?
ALU + Register + CU + Caceh

생각보다 쉬운데 어려모로 늦게 나옴??
-> 왜? 프로그래머가 싫어하기 때문에....
-> 옛날부터 있었다..(하지만 슈퍼컾퓨터


*게임 콘솔
-> 쓰레드 수 많은 이유? (클럭 속도 개구림)

콘솔은 쓰레드플밍을 잘햐야하낟

*결론
-> 앞으로 더 많은 Core를 사용하게 될것이다.
*고성능을 필요로하는 게임같은 분야에 많이 쓰임

Window -> 멀티쓰레드에 매우 지원을 함\


보통..

싱글 스레드를 일단 짜놓고 -> 멀티 스레드로 변환








